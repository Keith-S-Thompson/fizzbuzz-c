#!/bin/sh

strict=false
tests=""
clang=false
standard=-std=c99

for arg in "$@" ; do
    if [ "$arg" = "-strict" ] ; then
        strict=true
    elif [ "$arg" = "-clang" ] ; then
        clang=true
    elif [ "$arg" = "-c90" ] ; then
        standard=-std=c90
    elif [ "$arg" = "-c99" ] ; then
        standard=-std=c99
    elif [ "$arg" = "-c11" ] ; then
        standard=-std=c11
    elif [ -f "$arg" ] ; then
        tests="$tests $arg"
    else
        echo "Usage: $0 [-strict] [-clang] [-c90|-c99|-c11]" 1>&2
        exit 1
    fi
done

if $clang ; then
    CC=clang
else
    CC=gcc
fi

if $strict ; then
    CFLAGS="$standard -pedantic-errors -Wall -Wextra -O3"
else
    CFLAGS="$standard -Wno-format-extra-args"
fi

# if $clang && ! $strict ; then
#     CFLAGS="$CFLAGS -Wno-logical-op-parentheses"
# fi

if [ ! "$tests" ] ; then
    tests=fizzbuzz??.c
fi

ok=true
failures=''
for file in $tests ; do
    echo -n .
    exe=`basename $file .c`
    out=`basename $file .c`.out
    if [ "$file" = "fizzbuzz07.c" ] ; then
        $CC $CFLAGS -Wno-logical-op-parentheses $file -o $exe
    elif [ "$file" = "fizzbuzz26.c" ] ; then
        $CC $CFLAGS -Wno-logical-op-parentheses $file -o $exe
    elif [ "$file" = "fizzbuzz27.c" ] || [ "$file" = "fizzbuzz68.c" ] ; then
        $CC $CFLAGS -pthread $file -o $exe
    elif [ "$file" = "fizzbuzz64.c" ] ; then
        $CC $CFLAGS -Wno-multichar $file -o $exe
    elif [ "$file" = "fizzbuzz76.c" ] ; then
        $CC $CFLAGS $file -o $exe -lgmp
    else
        $CC $CFLAGS          $file -o $exe
    fi
    ./$exe >$out
    if ! cmp -s $out expected-output.txt ; then
        ok=false
        failures="$failures $file"
    fi
    rm -f $exe $out
done
echo ''

if $ok ; then
    echo OK
else
    echo Failures: $failures
    exit 1
fi
